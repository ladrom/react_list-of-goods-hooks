{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","ALPHABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EArDR,SACEA,EADF,GAGG,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAEzB,OAAQJ,GACN,KAAKL,EAASW,SACZD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAG1B,MAEF,KAAKd,EAASgB,OACZN,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGI,OAASH,EAAGG,UAS5B,OAAIV,EACKG,EAAaQ,UAGfR,EAwBOS,CACZlB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QA1BmB,WACzBf,EAAYN,EAASW,WA0BfW,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYlB,IAAaL,EAASW,WANxC,iCAYA,wBACEU,QAlCa,WACnBf,EAAYN,EAASgB,SAkCfM,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYlB,IAAaL,EAASgB,SANxC,4BAYA,wBACEK,QA1Cc,WACpBb,GAAeD,IA0CTe,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAAahB,IANnB,sBAYEF,IAAaL,EAASI,MAAQG,IAC9B,wBACEc,QAnDW,WACnBf,EAAYN,EAASI,MACrBI,GAAc,IAkDNc,KAAK,SACLF,UAAWG,IACT,SACA,YACA,YANJ,sBAeJ,6BACE,6BACGd,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC/InBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.acdbf248.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortInReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const resetSorting = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortAlphabetically}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={sortInReverse}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            onClick={resetSorting}\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-danger',\n              'is-light',\n            )}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}